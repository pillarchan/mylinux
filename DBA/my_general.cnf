[mysqld]
#GENERAL
user=mysql
basedir=/opt/software/mysql80
datadir=/opt/data/mysql3306/data
port=3306
socket=/opt/data/mysql3306/mysql.socket
mysqlx_port=33060
mysqlx_socket=/opt/data/mysql3306/mysqlx.socket

log-error=/opt/logs/mysql3306/mysql80err.log
pid-file=/opt/data/mysql3306/mysql80.pid
default_time_zone="+08:00"
log_timestamps=system
default_storage_engine=InnoDB
character_set_server=utf8mb4
transaction_isolation=REPEATABLE-READ
activate_all_roles_on_login=1
tmpdir=/opt/data/mysql3306/tmp #用于控制 MySQL 服务器临时文件的存储路径。
secure_file_priv=/opt/data/mysql3306/tmp #用于控制 MySQL 服务器导入导出数据的操作权限，只基于文件

#LOGS
general_log=0
general_log_file=/opt/logs/mysql3306/genaral/mysql3306.log

slow_query_log=1
slow_query_log_file=/opt/logs/mysql3306/slow/slow.log
long_query_time=1
log_queries_not_using_indexes=1

#SESSION
#建议设置为内存的10%-25%，read_rnd_buffer_size比read_buffer_size小
read_buffer_size=2M #控制用于顺序扫描表的读入缓冲区的大小1MB，该缓冲区用于存储从磁盘读取的数据
read_rnd_buffer_size=4M  #控制用于随机读取表的读入缓冲区的大小256KB，该缓冲区用于存储从磁盘读取的数据
sort_buffer_size=4M #控制用于排序操作的缓冲区大小256KB。该缓冲区用于存储需要排序的数据，以便 MySQL 可以更快地执行排序操作。
join_buffer_size=4M #控制用于连接表的连接缓冲区的大小512KB。该缓冲区用于存储连接操作所需的数据，以便 MySQL 可以更快地执行连接操作。

#CONNECTION
skip_name_resolve=1
back_log=100 #控制 MySQL 服务器在停止接受新连接之前可以排队的连接数。50-65535建议为内存的10%-25%
max_connections=100 #控制 MySQL 服务器可以同时接受的最大连接数。 151-65535建议为内存的10%-25%
max_connect_errors=10 #控制一个 IP 地址在连接到 MySQL 服务器之前允许的最大错误次数。10-2147483647
interactive_timeout=1800 #控制服务器关闭交互式连接之前等待活动的秒数。
wait_timeout=1800 #控制服务器等待客户端连接关闭的时间，单位为秒
thread_cache_size=128 #控制用于缓存空闲线程的线程缓存大小。该缓存用于存储不再使用的线程，以便 MySQL 可以更快地重用它们。10-65535建议为内存的10%-25%
max_allowed_packet=100M #控制服务器端和客户端在一次数据包传输过程中允许的最大数据包大小。如果数据包大小超过了设置的最大值，则会导致数据插入或更新失败。1M-1G建议为内存的10%-25%

#INNODB
innodb_file_per_table=1
innodb_data_file_path=ibdata1:1G:autoextend

innodb_buffer_pool_size=512M
innodb_buffer_pool_instances=4
innodb_buffer_pool_load_at_startup=1 #控制服务器启动时是否将 InnoDB 缓冲池加载到内存中。
innodb_buffer_pool_dump_at_shutdown=1 #控制服务器关闭时是否将 InnoDB 缓冲池的内容转储到磁盘。

#innodb_log_file_size=512M
#innodb_log_files_in_group=2
innodb_redo_log_capacity=1G

#innodb_undo_tablespaces=2
innodb_max_undo_log_size=1024M
innodb_undo_log_truncate=1

innodb_io_capacity=200
innodb_io_capacity_max=500
innodb_read_io_threads=4
innodb_write_io_threads=4

innodb_page_cleaners=8
innodb_purge_threads=4
innodb_flush_method=O_DIRECT
innodb_flush_neighbors=1
innodb_flush_log_at_trx_commit=1
innodb_autoinc_lock_mode=2  #用于控制为 AUTO_INCREMENT 列生成值时如何进行锁定的行为
innodb_checksum_algorithm=crc32 #用于指定用于计算 InnoDB 页校验和的算法。校验和用于验证数据页的完整性，并在数据库崩溃或损坏时帮助恢复数据。
innodb_strict_mode=1 #用于控制 InnoDB 引擎在执行某些操作时的严格程度。该参数可以帮助您提高数据完整性和一致性，但也可能会降低性能。值越高对性能影响越大，生产建议1
innodb_print_all_deadlocks=1 #用于控制是否将所有死锁信息打印到错误日志中。
innodb_numa_interleave=1 #用于控制 InnoDB 引擎在 NUMA（非一致内存访问）架构上分配内存的方式。0为将内存分配在本地，1为将内存分配所有节点，可提高性能但加大内存使用量
innodb_open_files=65535 #控制 InnoDB 引擎可以同时打开的 .ibd 文件数量，包括数据文件、索引文件、重做日志文件等等
innodb_adaptive_hash_index=OFF #用于控制 InnoDB 引擎是否自动创建自适应哈希索引。如果数据库负载较高，并且存在大量主键查询和唯一索引查询，可以打开

#REPLICATION
server_id=1
log_bin=/opt/logs/mysql3306/binlog/mysql-bin
relay_log=/opt/logs/mysql3306/relaylog/relay-bin
sync_binlog=1
binlog_format=ROW
master_info_repository=TABLE
relay_log_info_repository=TABLE
relay_log_recovery=ON
#log_slave_updates=ON
log_replica_updates=ON
binlog_expire_logs_seconds=604800
slave_rows_search_algorithms='INDEX_SCAN,HASH_SCAN' #用于控制从库在执行数据变更操作时如何查找数据行
slave_net_timeout=60
skip_slave_start=ON
binlog_error_action=ABORT_SERVER
super_read_only=ON

#GTID
gtid_mode=ON
enforce_gtid_consistency=ON
binlog_gtid_simple_recovery=TRUE #用于控制从库在使用 GTID（全局事务标识符）进行复制时如何执行简单恢复。设置为 TRUE 时，从库在执行简单恢复时只会扫描最新的二进制日志文件，以找到所有已执行的事务。

#SEMI_REPLICATION
plugin_load='validate_password.so;rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so'
rpl_semi_sync_master_enabled=ON
rpl_semi_sync_slave_enabled=ON
rpl_semi_sync_master_timeout=10000 #用于控制主库在等待从库确认事务时，超时等待的时间

#MULTI_THREAD_REPLICATION
slave_parallel_type=LOGICAL_CLOCK
slave_parallel_workers=4
slave_preserve_commit_order=ON #用于控制从库在执行数据变更操作时是否保留主库提交顺序
binlog_transaction_dependency_tracking= WRITESET_SESSION #用于控制主库在生成二进制日志（binlog）时如何记录事务之间的依赖关系
binlog_transaction_dependency_history_size=25000 #用于控制主库在使用 WRITESET 或 WRITESET_SESSION 模式记录事务依赖关系时，内存中保存的依赖关系历史记录的最大数量。值越大，从库并行复制性能越高，主库内存消耗越大
transaction_write_set_extraction=XXHASH64 #是 MySQL Group Replication 中的一个参数，用于控制事务写集提取的算法，事务写集是指事务修改的所有行集。XXHASH64 是一种快速、非加密的哈希函数，具有良好的性能和冲突检测能力。它是 64 位版本的 XXH 哈希函数，适用于 64 位系统。

#OTHERS
open_files_limit=65535 #用于控制 MySQL 服务器可以同时打开的文件数量，包括表文件、索引文件、临时文件等等。
max_heap_table_size=32M  #用于控制 MEMORY 引擎表 的最大允许大小。
tmp_table_size=32M #用于控制 临时表 的最大允许大小,过低导致临时表无法存储足够数据，影响性能，过高浪费内存
table_open_cache=65535 #用于控制 MySQL 服务器可以同时打开的表文件数量，可以使用ulimit -n查看系统打开最大文件数限制，设置比它高即可
table_definition_cache=65535 #用于控制 MySQL 服务器可以缓存的表定义数量。根据 show status like '%table_definition_cache%',查看命中率进行调整
table_open_cache_instances=64 #用于控制表缓存实例的数量。根据SHOW GLOBAL STATUS LIKE 'Table_open_cache_instances%'查看使用情况


[mysqldump]
quick
